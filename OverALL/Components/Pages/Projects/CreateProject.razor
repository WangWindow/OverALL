@page "/projects/create"
@using OverALL.Data.Models
@using OverALL.Services
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@using System.ComponentModel.DataAnnotations
@attribute [Authorize]
@inject PdfProjectService ProjectService
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<PageTitle>创建项目</PageTitle>

<MudText Typo="Typo.h4" GutterBottom="true">
    <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3" />
    创建新的项目
</MudText>

<MudPaper Class="pa-6 mt-4">
    <EditForm Model="@_model" OnValidSubmit="@CreateProjectAsync">
        <DataAnnotationsValidator />

        <MudGrid>
            <MudItem xs="12">
                <MudTextField @bind-Value="_model.Name" Label="项目名称" Variant="Variant.Outlined" Required="true"
                    MaxLength="200" Counter="200" HelperText="请输入项目的名称" For="@(() => _model.Name)" />
            </MudItem>

            <MudItem xs="12">
                <MudTextField @bind-Value="_model.Description" Label="项目描述" Variant="Variant.Outlined" Lines="4"
                    MaxLength="1000" Counter="1000" HelperText="描述项目的目标和内容（可选）" For="@(() => _model.Description)" />
            </MudItem>

            <MudItem xs="12">
                <MudAlert Severity="Severity.Info" Class="my-4">
                    <MudText Typo="Typo.body2">
                        <strong>项目处理流程：</strong>
                    </MudText>
                    <MudList T="string" Dense="true" Class="mt-2">
                        <MudListItem T="string" Icon="@Icons.Material.Filled.FileUpload">
                            <MudText Typo="Typo.body2">1. 上传PDF文档</MudText>
                        </MudListItem>
                        <MudListItem T="string" Icon="@Icons.Material.Filled.Analytics">
                            <MudText Typo="Typo.body2">2. 文献解析模块 - 提取并格式化参考文献列表</MudText>
                        </MudListItem>
                        <MudListItem T="string" Icon="@Icons.Material.Filled.Search">
                            <MudText Typo="Typo.body2">3. 文献获取模块 - 自动爬取各数据库获取原始论文</MudText>
                        </MudListItem>
                        <MudListItem T="string" Icon="@Icons.Material.Filled.Schema">
                            <MudText Typo="Typo.body2">4. 内容结构化模块 - 大模型分析内容，生成章节大纲</MudText>
                        </MudListItem>
                        <MudListItem T="string" Icon="@Icons.Material.Filled.GridView">
                            <MudText Typo="Typo.body2">5. 页面规划模块 - 大模型细化每页内容规划</MudText>
                        </MudListItem>
                        <MudListItem T="string" Icon="@Icons.Material.Filled.Collections">
                            <MudText Typo="Typo.body2">6. 内容集合模块 - 检索相关图表与方法，匹配至对应页面</MudText>
                        </MudListItem>
                        <MudListItem T="string" Icon="@Icons.Material.Filled.Slideshow">
                            <MudText Typo="Typo.body2">7. 演示文稿生成模块 - Slidev转换+大模型多轮优化</MudText>
                        </MudListItem>
                        <MudListItem T="string" Icon="@Icons.Material.Filled.Notes">
                            <MudText Typo="Typo.body2">8. 备注生成模块 - 大模型生成详细演讲备注</MudText>
                        </MudListItem>
                    </MudList>
                </MudAlert>
            </MudItem>

            <MudItem xs="12" Class="d-flex gap-4">
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary"
                    StartIcon="@Icons.Material.Filled.Save" Disabled="@_isSubmitting">
                    @if (_isSubmitting)
                    {
                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                        <MudText Class="ms-2">创建中...</MudText>
                    }
                    else
                    {
                        <MudText>创建项目</MudText>
                    }
                </MudButton>

                <MudButton Variant="Variant.Outlined" Color="Color.Default" StartIcon="@Icons.Material.Filled.Cancel"
                    OnClick="@Cancel" Disabled="@_isSubmitting">
                    取消
                </MudButton>
            </MudItem>
        </MudGrid>
    </EditForm>
</MudPaper>

@code {
    private CreateProjectModel _model = new();
    private bool _isSubmitting = false; private async Task CreateProjectAsync()
    {
        try
        {
            _isSubmitting = true;
            var userId = GetCurrentUserId();

            if (string.IsNullOrEmpty(userId))
            {
                Snackbar.Add("用户未登录", Severity.Error);
                return;
            }

            var project = await ProjectService.CreateProjectAsync(_model.Name, _model.Description, userId);

            Snackbar.Add("项目创建成功！", Severity.Success);
            Navigation.NavigateTo($"/projects/{project.Id}");
        }
        catch (Exception ex)
        {
            Snackbar.Add($"创建项目失败: {ex.Message}", Severity.Error);
        }
        finally
        {
            _isSubmitting = false;
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/projects");
    }
    private string GetCurrentUserId()
    {
        var authState = Task.Run(async () => await AuthenticationStateTask).Result;
        return authState.User?.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? string.Empty;
    }

    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; } = default!;

    public class CreateProjectModel
    {
        [Required(ErrorMessage = "项目名称不能为空")]
        [StringLength(200, ErrorMessage = "项目名称长度不能超过200个字符")]
        public string Name { get; set; } = string.Empty;

        [StringLength(1000, ErrorMessage = "项目描述长度不能超过1000个字符")]
        public string? Description { get; set; }
    }
}
