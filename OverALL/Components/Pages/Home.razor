@page "/"
@using OverALL.Data.Models
@using OverALL.Services
@using System.Security.Claims
@inject PdfProjectService ProjectService
@inject NavigationManager Navigation

<PageTitle>PDF处理平台</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large">
    <MudText Typo="Typo.h3" GutterBottom="true" Class="text-center">
        <MudIcon Icon="@Icons.Material.Filled.PictureAsPdf" Class="mr-3" Size="Size.Large"/>
        PDF处理平台
    </MudText>
    <MudText Class="mb-8 text-center" Typo="Typo.h6" Color="Color.Secondary">
        智能PDF文档处理，一键生成专业演示文稿
    </MudText>

    <AuthorizeView>
        <Authorized>
            <!-- 用户已登录 - 显示项目概览 -->
            <MudGrid>
                <MudItem xs="12" md="8">
                    <MudPaper Class="pa-6">
                        <MudText Typo="Typo.h5" GutterBottom="true">
                            <MudIcon Icon="@Icons.Material.Filled.Dashboard" Class="mr-2"/>
                            项目概览
                        </MudText>

                        @if (_isLoading)
                        {
                            <MudProgressLinear Indeterminate="true" Class="my-4"/>
                        }
                        else if (_recentProjects.Any())
                        {
                            <MudGrid>
                                @foreach (var project in _recentProjects.Take(3))
                                {
                                    <MudItem xs="12">
                                        <MudCard Outlined="true" Class="cursor-pointer" @onclick="@(() => ViewProject(project.Id))">
                                            <MudCardContent>
                                                <div style="display: flex; justify-content: space-between; align-items: center;">
                                                    <div>
                                                        <MudText Typo="Typo.h6">@project.Name</MudText>
                                                        <MudText Typo="Typo.body2" Color="Color.Secondary">
                                                            @project.Documents.Count 个文档 • @project.CreatedAt.ToString("MM-dd")
                                                        </MudText>
                                                    </div>
                                                    <MudChip T="string" Color="@GetStatusColor(project.Status)" Size="Size.Small">
                                                        @GetStatusText(project.Status)
                                                    </MudChip>
                                                </div>
                                            </MudCardContent>
                                        </MudCard>
                                    </MudItem>
                                }
                            </MudGrid>

                            <div class="text-center mt-4">
                                <MudButton Variant="Variant.Outlined"
                                           Color="Color.Primary"
                                           OnClick="@(() => Navigation.NavigateTo("/projects"))">
                                    查看所有项目
                                </MudButton>
                            </div>
                        }
                        else
                        {
                            <MudAlert Severity="Severity.Info">
                                <MudText>还没有创建任何项目。</MudText>
                                <MudButton StartIcon="@Icons.Material.Filled.Add"
                                           Color="Color.Primary"
                                           Variant="Variant.Text"
                                           OnClick="@(() => Navigation.NavigateTo("/projects/create"))"
                                           Class="mt-2">
                                    创建第一个项目
                                </MudButton>
                            </MudAlert>
                        }
                    </MudPaper>
                </MudItem>

                <MudItem xs="12" md="4">
                    <MudPaper Class="pa-6">
                        <MudText Typo="Typo.h6" GutterBottom="true">
                            <MudIcon Icon="@Icons.Material.Filled.TrendingUp" Class="mr-2"/>
                            统计信息
                        </MudText>

                        @if (!_isLoading)
                        {
                            <MudList T="string" Dense="true">
                                <MudListItem T="string" Icon="@Icons.Material.Filled.FolderOpen">
                                    <div style="display: flex; justify-content: space-between; width: 100%;">
                                        <MudText>总项目数</MudText>
                                        <MudText><strong>@_statistics.TotalProjects</strong></MudText>
                                    </div>
                                </MudListItem>
                                <MudListItem T="string" Icon="@Icons.Material.Filled.CheckCircle">
                                    <div style="display: flex; justify-content: space-between; width: 100%;">
                                        <MudText>已完成</MudText>
                                        <MudText><strong>@_statistics.CompletedProjects</strong></MudText>
                                    </div>
                                </MudListItem>
                                <MudListItem T="string" Icon="@Icons.Material.Filled.Psychology">
                                    <div style="display: flex; justify-content: space-between; width: 100%;">
                                        <MudText>处理中</MudText>
                                        <MudText><strong>@_statistics.ProcessingProjects</strong></MudText>
                                    </div>
                                </MudListItem>
                            </MudList>
                        }
                    </MudPaper>
                </MudItem>
            </MudGrid>
        </Authorized>
    </AuthorizeView>
</MudContainer>

@code {
    private List<PdfProject> _recentProjects = new();
    private ProjectStatistics _statistics = new();
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateTask;
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            await LoadUserData();
        }
        else
        {
            _isLoading = false;
        }
    }

    private async Task LoadUserData()
    {
        try
        {
            var userId = GetCurrentUserId();
            if (!string.IsNullOrEmpty(userId))
            {
                var allProjects = await ProjectService.GetUserProjectsAsync(userId);
                _recentProjects = allProjects.Take(5).ToList();
                _statistics = await ProjectService.GetProjectStatisticsAsync(userId);
            }
        }
        catch (Exception)
        {
            // 静默处理错误，避免影响首页加载
        }
        finally
        {
            _isLoading = false;
        }
    }

    private string GetCurrentUserId()
    {
        var authState = Task.Run(async () => await AuthenticationStateTask).Result;
        return authState.User?.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? string.Empty;
    }

    private void ViewProject(int projectId)
    {
        Navigation.NavigateTo($"/projects/{projectId}");
    }

    private Color GetStatusColor(ProjectStatus status) => status switch
    {
        ProjectStatus.Created => Color.Default,
        ProjectStatus.Processing => Color.Warning,
        ProjectStatus.Completed => Color.Success,
        ProjectStatus.Failed => Color.Error,
        ProjectStatus.Cancelled => Color.Secondary,
        _ => Color.Default
    };

    private string GetStatusText(ProjectStatus status) => status switch
    {
        ProjectStatus.Created => "已创建",
        ProjectStatus.Processing => "处理中",
        ProjectStatus.Completed => "已完成",
        ProjectStatus.Failed => "失败",
        ProjectStatus.Cancelled => "已取消",
        _ => "未知"
    };

    [CascadingParameter] private Task<AuthenticationState> AuthenticationStateTask { get; set; } = default!;
}

@*
<br />
<MudText Typo="Typo.h6" GutterBottom="true">InteractiveAuto</MudText>
<MudText Typo="Typo.body2">
    A discussion on how to achieve this can be found here:
    <MudLink Href="https://github.com/dotnet/aspnetcore/issues/51468#issue-1950424116" Target="_blank" Typo="Typo.body2" Color="Color.Primary">
        More details
    </MudLink>
</MudText>
*@
