@page "/projects"
@using OverALL.Data.Models
@using OverALL.Services
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@attribute [Authorize]
@inject PdfProjectService ProjectService
@inject NavigationManager Navigation
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<PageTitle>项目管理</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">
    <MudIcon Icon="@Icons.Material.Filled.Dashboard" Class="mr-3"/>
    我的PDF项目
</MudText>

<MudGrid>
    <!-- 统计卡片 -->
    <MudItem xs="12" sm="6" md="3">
        <MudCard>
            <MudCardContent>
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div>
                        <MudText Typo="Typo.body2" Color="Color.Primary">总项目数</MudText>
                        <MudText Typo="Typo.h4">@_statistics.TotalProjects</MudText>
                    </div>
                    <MudIcon Icon="@Icons.Material.Filled.FolderOpen" Size="Size.Large" Color="Color.Primary"/>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>

    <MudItem xs="12" sm="6" md="3">
        <MudCard>
            <MudCardContent>
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div>
                        <MudText Typo="Typo.body2" Color="Color.Success">已完成</MudText>
                        <MudText Typo="Typo.h4">@_statistics.CompletedProjects</MudText>
                    </div>
                    <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Size="Size.Large" Color="Color.Success"/>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>

    <MudItem xs="12" sm="6" md="3">
        <MudCard>
            <MudCardContent>
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div>
                        <MudText Typo="Typo.body2" Color="Color.Warning">处理中</MudText>
                        <MudText Typo="Typo.h4">@_statistics.ProcessingProjects</MudText>
                    </div>
                    <MudIcon Icon="@Icons.Material.Filled.Psychology" Size="Size.Large" Color="Color.Warning"/>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>

    <MudItem xs="12" sm="6" md="3">
        <MudCard>
            <MudCardContent>
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <div>
                        <MudText Typo="Typo.body2" Color="Color.Error">失败</MudText>
                        <MudText Typo="Typo.h4">@_statistics.FailedProjects</MudText>
                    </div>
                    <MudIcon Icon="@Icons.Material.Filled.Error" Size="Size.Large" Color="Color.Error"/>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

<MudPaper Class="pa-4 mt-4">
    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px;">
        <MudText Typo="Typo.h6">项目列表</MudText>
        <MudButton StartIcon="@Icons.Material.Filled.Add"
                   Color="Color.Primary"
                   Variant="Variant.Filled"
                   OnClick="@(() => Navigation.NavigateTo("/projects/create"))">
            创建新项目
        </MudButton>
    </div>

    @if (_isLoading)
    {
        <MudProgressLinear Indeterminate="true" Class="my-4"/>
        <MudText Align="Align.Center">加载中...</MudText>
    }
    else if (!_projects.Any())
    {
        <MudAlert Severity="Severity.Info" Class="my-4">
            <MudText>还没有创建任何项目。</MudText>
            <MudButton StartIcon="@Icons.Material.Filled.Add"
                       Color="Color.Primary"
                       Variant="Variant.Text"
                       OnClick="@(() => Navigation.NavigateTo("/projects/create"))"
                       Class="mt-2">
                创建第一个项目
            </MudButton>
        </MudAlert>
    }
    else
    {
        <MudTable Items="@_projects" Dense="true" Hover="true" Breakpoint="Breakpoint.Sm">
            <HeaderContent>
                <MudTh>项目名称</MudTh>
                <MudTh>状态</MudTh>
                <MudTh>文档数</MudTh>
                <MudTh>创建时间</MudTh>
                <MudTh>操作</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="项目名称">
                    <div>
                        <MudText Typo="Typo.body1">@context.Name</MudText>
                        @if (!string.IsNullOrWhiteSpace(context.Description))
                        {
                            <MudText Typo="Typo.body2" Color="Color.Secondary">@context.Description</MudText>
                        }
                    </div>
                </MudTd>                <MudTd DataLabel="状态">
                    <MudChip T="string" Color="@GetStatusColor(context.Status)" Size="Size.Small">
                        @GetStatusText(context.Status)
                    </MudChip>
                </MudTd>
                <MudTd DataLabel="文档数">
                    <MudText>@context.Documents.Count</MudText>
                </MudTd>
                <MudTd DataLabel="创建时间">
                    <MudText>@context.CreatedAt.ToString("yyyy-MM-dd HH:mm")</MudText>
                </MudTd>
                <MudTd DataLabel="操作">
                    <MudButtonGroup>
                        <MudIconButton Icon="@Icons.Material.Filled.Visibility"
                                       Color="Color.Primary"
                                       Size="Size.Small"
                                       OnClick="@(() => ViewProject(context.Id))"
                                       Title="查看详情"/>
                        <MudIconButton Icon="@Icons.Material.Filled.Edit"
                                       Color="Color.Default"
                                       Size="Size.Small"
                                       OnClick="@(() => EditProject(context.Id))"
                                       Title="编辑"/>
                        <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                       Color="Color.Error"
                                       Size="Size.Small"
                                       OnClick="@(() => DeleteProject(context))"
                                       Title="删除"/>
                    </MudButtonGroup>
                </MudTd>
            </RowTemplate>
        </MudTable>
    }
</MudPaper>

@code {
    private List<PdfProject> _projects = new();
    private ProjectStatistics _statistics = new();
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            _isLoading = true;
            var userId = GetCurrentUserId();
            if (!string.IsNullOrEmpty(userId))
            {
                _projects = await ProjectService.GetUserProjectsAsync(userId);
                _statistics = await ProjectService.GetProjectStatisticsAsync(userId);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"加载数据失败: {ex.Message}", Severity.Error);
        }
        finally
        {
            _isLoading = false;
        }
    }    private string GetCurrentUserId()
    {
        var authState = Task.Run(async () => await AuthenticationStateTask).Result;
        return authState.User?.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? string.Empty;
    }

    private Color GetStatusColor(ProjectStatus status)
    {
        return status switch
        {
            ProjectStatus.Created => Color.Default,
            ProjectStatus.Processing => Color.Warning,
            ProjectStatus.Completed => Color.Success,
            ProjectStatus.Failed => Color.Error,
            ProjectStatus.Cancelled => Color.Secondary,
            _ => Color.Default
        };
    }

    private string GetStatusText(ProjectStatus status)
    {
        return status switch
        {
            ProjectStatus.Created => "已创建",
            ProjectStatus.Processing => "处理中",
            ProjectStatus.Completed => "已完成",
            ProjectStatus.Failed => "失败",
            ProjectStatus.Cancelled => "已取消",
            _ => "未知"
        };
    }

    private void ViewProject(int projectId)
    {
        Navigation.NavigateTo($"/projects/{projectId}");
    }

    private void EditProject(int projectId)
    {
        Navigation.NavigateTo($"/projects/{projectId}/edit");
    }

    private async Task DeleteProject(PdfProject project)
    {
        var result = await DialogService.ShowMessageBox(
            "确认删除",
            $"确定要删除项目 '{project.Name}' 吗？这个操作不能撤销。",
            yesText: "删除",
            cancelText: "取消");

        if (result == true)
        {
            try
            {
                var userId = GetCurrentUserId();
                var success = await ProjectService.DeleteProjectAsync(project.Id, userId);
                if (success)
                {
                    Snackbar.Add("项目删除成功", Severity.Success);
                    await LoadData();
                }
                else
                {
                    Snackbar.Add("删除项目失败", Severity.Error);
                }
            }
            catch (Exception ex)
            {            Snackbar.Add($"删除项目时发生错误: {ex.Message}", Severity.Error);
            }
        }
    }

    [CascadingParameter] private Task<AuthenticationState> AuthenticationStateTask { get; set; } = default!;
}
